name: Build and Deploy Frontend

on:
  push:

jobs:
  build-and-deploy:
    name: Build and Deploy
    environment: 
      name: Governance Frontend ${{ github.ref_name }}
      url: https://governance-frontend-${{ env.GITHUB_REF_SLUG }}.yukilabs.workers.dev
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
            .eslintcache
            **/tsconfig.tsbuildinfo
            **/.types/**
            **/.types-*/**
          key: build-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            build-cache-

      - name: Install dependencies
        run: yarn
  
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4

      - name: Create Env
        run: echo -e "\n[env.${{ env.GITHUB_REF_SLUG }}]\n" >> workspaces/frontend/wrangler.toml

      - name: Build project
        run: yarn workspace @yukilabs/governance-frontend build
        env:
          VITE_SITE_URL: https://governance-frontend-${{ env.GITHUB_REF_SLUG }}.yukilabs.workers.dev
          VITE_APP_DYNAMIC_ID: a99f1241-3620-4df1-9673-96b3a3684cdf

      - name: Publish
        run: yarn workspace @yukilabs/governance-frontend exec wrangler publish --env ${{ env.GITHUB_REF_SLUG }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
