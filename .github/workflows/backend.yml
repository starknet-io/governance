name: back deployment

on:
  push:
    branches: ['dev']
    paths:
      - 'workspaces/backend/**'
  workflow_dispatch:

jobs:
  codeql-analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write
    defaults:
      run:
        working-directory: workspaces/backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
      - name: Install dependencies
        run: |
          yarn install

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript-typescript"
  Build:
    runs-on: ubuntu-latest
    needs: codeql-analysis
    outputs:
      tag: ${{ steps.meta.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: europe-west9-docker.pkg.dev/governance-development/api/dev
          flavor: latest=false
          tags: |
            type=ref,suffix=-{{sha}},event=branch
            type=ref,suffix=-{{sha}},event=pr

      - uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          token_format: access_token
          project_id: 'governance-development'
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: europe-west9-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: backend.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            "certificate=${{ secrets.CERTIFICATE }}"

  Deploy-dev:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/dev'
    needs: Build
    runs-on: ubuntu-latest
    env:
      tag: ${{ needs.Build.outputs.tag }}
    environment:
      name: development-backend
      url: https://api-dev.yuki-labs.dev
    steps:
      - run: echo ${{ env.tag }}
      - uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          token_format: access_token
          project_id: 'governance-development'
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0.4.0
        with:
          service: api
          image: ${{ steps.meta.outputs.tags }}
          region: europe-west9

  Deploy-snapshot:
      if: github.event_name != 'pull_request' && github.ref == 'refs/heads/snapshot'
      needs: Build
      runs-on: ubuntu-latest
      env:
        tag: ${{ needs.Build.outputs.tag }}
      environment:
        name: snapshot-backend
        url: https://api-snapshot.yuki-labs.dev
      steps:
        - name: DigitalOcean App Platform deployment
          uses: digitalocean/app_action@v1.1.5
          with:
            app_name: backend-snapshot
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
            images: '[{"name": "backend","image":{"registry_type": "DOCR","repository": "backend","tag": "${{ env.tag }}"}}]'
