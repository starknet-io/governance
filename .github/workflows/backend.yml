name: back deployment

on:
  push:
    tags:
      - 'v*'
    branches: ['dev']
    paths:
      - 'workspaces/backend/**'
  pull_request:
    branches: [ 'dev' ]
    paths:
      - 'workspaces/backend/**'
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/backend
          flavor: latest=false
          tags: |
            type=ref,suffix=-{{sha}},event=branch
            type=ref,suffix=-{{sha}},event=pr
            type=ref,event=tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: backend.Dockerfile
          cache-from: type=gha
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  Deploy-review:
    if: github.event_name == 'pull_request'
    needs: Build
    runs-on: sandbox
    permissions:
      contents: read
      packages: write
    env:
      image: ${{ needs.Build.outputs.image }}
      port: 8000
      external_port: 1001
      database_url: ${{ secrets.DATABASE_URL }}
      client_origin: ${{ vars.CLIENT_ORIGIN }}
      dynamic_public_key: ${{ secrets.DYNAMIC_PUBLIC_KEY }}
      environment: review
    defaults:
      run:
        working-directory: workspaces/backend
    environment:
      name: review-backend
      url: https://back-review.yuki-sandbox.clivado.com
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker image prune -f -a
      - run: docker-compose -p review-backend up -d --remove-orphans --wait
  Deploy-dev:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/dev'
    needs: Build
    runs-on: sandbox
    permissions:
      contents: read
      packages: write
    env:
      image: ${{ needs.Build.outputs.image }}
      port: 8000
      external_port: 2001
      database_url: ${{ secrets.DATABASE_URL }}
      client_origin: ${{ vars.CLIENT_ORIGIN }}
      dynamic_public_key: ${{ secrets.DYNAMIC_PUBLIC_KEY }}
      environment: development
    defaults:
      run:
        working-directory: workspaces/backend
    environment:
      name: development-backend
      url: https://back-dev.yuki-sandbox.clivado.com
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker image prune -f -a
      - run: docker-compose -p development-backend up -d --remove-orphans --wait
  Deploy-production:
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs: Build
    runs-on: production
    permissions:
      contents: read
      packages: write
    env:
      image: ${{ needs.Build.outputs.image }}
      port: 8000
      external_port: 8000
      database_url: ${{ secrets.DATABASE_URL }}
      client_origin: ${{ vars.CLIENT_ORIGIN }}
      dynamic_public_key: ${{ secrets.DYNAMIC_PUBLIC_KEY }}
      environment: production
    defaults:
      run:
        working-directory: workspaces/backend
    environment:
      name: production-backend
      url: https://api.yuki-sandbox.clivado.com/
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker image prune -f -a
      - run: docker-compose -p production-backend up -d --remove-orphans --wait
